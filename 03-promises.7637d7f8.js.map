{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAM,CACVC,KAAMC,SAASC,cAAe,QAC9BC,WAAYF,SAASC,cAAe,uBACpCE,UAAWH,SAASC,cAAe,sBACnCG,OAAQJ,SAASC,cAAe,wBAChCI,UAAWL,SAASC,cAAe,WAiCrC,SAASK,EAAeC,EAAUC,GAEhC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAS,CAAEC,EAASC,KAEtCC,YAAY,KAGV,MAAMC,EAAY,C,SACdT,E,MACAC,GAECC,GAEHb,EAAAqB,OAAOC,QAAQ,uBAAqBX,QAAmBC,OACrDW,QAAMC,IAAKJ,KAIbpB,EAAAqB,OAAOI,QAAS,sBAAoBd,QAAiBC,OACrDW,QAAQC,IAAKJ,G,GAEdR,EAAO,G,CArDdW,QAAQC,IAAKtB,EAAII,YACjBiB,QAAQC,IAAKtB,EAAIK,WACjBgB,QAAQC,IAAKtB,EAAIM,QACjBe,QAAQC,IAAKtB,EAAIO,WACjBc,QAAQC,IAAKtB,EAAIC,MAEjBD,EAAIC,KAAKuB,iBAAkB,UAG3B,SAAwBC,GAEtBA,EAAMC,iBAENL,QAAQC,IAAKtB,EAAII,WAAWuB,OAC5BN,QAAQC,IAAKtB,EAAIK,UAAUsB,OAC3BN,QAAQC,IAAKtB,EAAIM,OAAOqB,OAExB,IAAIjB,EAAQkB,OAAO5B,EAAII,WAAWuB,OAElC,IAAM,IAAIE,EAAI,EAAGA,GAAKD,OAAO5B,EAAIM,OAAOqB,OAAQE,GAAK,EAGnDR,QAAQC,IAAK,cAAeO,EAAG,8BAA+BnB,GAC9DF,EAAeqB,EAAGnB,GAClBA,GAASkB,OAAO5B,EAAIK,UAAUsB,OAEhCF,EAAMK,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst ref = {\n  form: document.querySelector( 'form' ),\n  firstDelay: document.querySelector( 'input[name=\"delay\"]' ),\n  delayStep: document.querySelector( 'input[name=\"step\"]' ),\n  amount: document.querySelector( 'input[name=\"amount\"]' ),\n  createBtn: document.querySelector( 'button' ),\n}\n\nconsole.log( ref.firstDelay );\nconsole.log( ref.delayStep );\nconsole.log( ref.amount );\nconsole.log( ref.createBtn );\nconsole.log( ref.form );\n\nref.form.addEventListener( 'submit', submitHandler );\n\n\nfunction submitHandler( event )\n{\n  event.preventDefault();\n\n  console.log( ref.firstDelay.value );\n  console.log( ref.delayStep.value );\n  console.log( ref.amount.value );\n\n  let delay = Number(ref.firstDelay.value);\n\n  for ( let i = 1; i <= Number(ref.amount.value); i += 1 )\n  {\n    \n    console.log( 'The promis ', i, 'will be created with delay ', delay );\n    createPromise( i, delay );\n    delay += Number(ref.delayStep.value);    \n  }  \n  event.currentTarget.reset();\n}\n\n\nfunction createPromise( position, delay )\n{\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise( ( resolve, reject ) => \n  {\n    setTimeout( () => \n    {\n      \n      const promisObj = {\n          position,\n          delay\n        };\n      if ( shouldResolve ) \n      {\n        Notify.success(`✅ Fulfilled promise ${ position } in ${ delay }ms`);\n        console.log( promisObj );\n      }\n      else\n      {\n        Notify.failure( `❌ Rejected promise ${ position } in ${ delay }ms` );\n        console.log( promisObj );\n      }\n    }, delay );\n  });\n}\n\n\n\n\n\n\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$ref","form","document","querySelector","firstDelay","delayStep","amount","createBtn","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","promisObj","Notify","success","console","log","failure","addEventListener","event","preventDefault","value","Number","i","currentTarget","reset"],"version":3,"file":"03-promises.7637d7f8.js.map"}