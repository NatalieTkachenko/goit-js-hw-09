{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAeC,EAAUC,GAEhC,IAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAS,SAAEC,EAASC,GAEtCC,YAAY,WAEV,GAAKN,EACL,CACE,IAAMO,EAAY,CAChBT,WACAC,SAEFJ,EAAAa,OAAOC,QAAQ,uBAA2CC,OAAjBZ,EAAU,QAAcY,OAAPX,EAAO,OAC/DY,QAAMC,IAAKL,E,MAIbZ,EAAAa,OAAOK,QAAQ,sBAAwCH,OAAjBZ,EAAU,QAAcY,OAAPX,EAAO,M,GAE/DA,E,IAOP,IAAMe,EAAM,CACVC,KAAMC,SAASC,cAAe,QAC9BlB,MAAOiB,SAASC,cAAe,uBAC/BC,KAAMF,SAASC,cAAe,sBAC9BE,OAAQH,SAASC,cAAe,wBAChCG,UAAWJ,SAASC,cAAe,WAGrCN,QAAQC,IAAKE,EAAIf,OACjBY,QAAQC,IAAKE,EAAII,MACjBP,QAAQC,IAAKE,EAAIK,QACjBR,QAAQC,IAAKE,EAAIM,WACjBT,QAAQC,IAAKE,EAAIC,MAEjBD,EAAIC,KAAKM,iBAAkB,UAI3B,WAEEC,MAAMC,iBAMN,IAJA,IAAIC,EAAYC,OAAQX,EAAIf,MAAM2B,OAC5BC,EAAWF,OAAQX,EAAII,KAAKQ,OAC5BE,EAAmBH,OAAQX,EAAIK,OAAOO,OAElCG,EAAI,EAAGA,GAAKD,EAAkBC,GAAK,EAG3ChC,EAAegC,EADfL,GAAaG,GAIfL,MAAMQ,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nfunction createPromise( position, delay )\n{\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise( ( resolve, reject ) => \n  {\n    setTimeout( () => \n    {\n      if ( shouldResolve ) \n      {\n        const promisObj = {\n          position,\n          delay\n        };\n        Notify.success(`✅ Fulfilled promise ${ position } in ${ delay }ms`);\n        console.log( promisObj );\n      }\n      else\n      {\n        Notify.failure(`❌ Rejected promise ${ position } in ${ delay }ms`);\n      }\n    }, delay );\n  });\n}\n\n\n\n\nconst ref = {\n  form: document.querySelector( 'form' ),\n  delay: document.querySelector( 'input[name=\"delay\"]' ),\n  step: document.querySelector( 'input[name=\"step\"]' ),\n  amount: document.querySelector( 'input[name=\"amount\"]' ),\n  createBtn: document.querySelector( 'button' ),\n}\n\nconsole.log( ref.delay );\nconsole.log( ref.step );\nconsole.log( ref.amount );\nconsole.log( ref.createBtn );\nconsole.log( ref.form );\n\nref.form.addEventListener( 'submit', submitHandler );\n\n\n\nfunction submitHandler()\n{\n  event.preventDefault();\n\n  let delayTime = Number( ref.delay.value );\n  const stepTime = Number( ref.step.value );\n  const amountOfPromises = Number( ref.amount.value );\n      \n  for ( let i = 1; i <= amountOfPromises; i += 1 )\n  {\n    delayTime += stepTime;\n    createPromise( i, delayTime );\n  }\n  \n  event.currentTarget.reset();\n}\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","promisObj","Notify","success","concat","console","log","failure","$ce04d3a99e08e73b$var$ref","form","document","querySelector","step","amount","createBtn","addEventListener","event","preventDefault","delayTime","Number","value","stepTime","amountOfPromises","i","currentTarget","reset"],"version":3,"file":"03-promises.574de9e2.js.map"}