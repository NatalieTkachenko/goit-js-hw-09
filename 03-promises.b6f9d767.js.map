{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAeC,EAAUC,GAEhC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAS,CAAEC,EAASC,KAEtCC,YAAY,KAEV,GAAKN,EACL,CACE,MAAMO,EAAY,C,SAChBT,E,MACAC,GAEFJ,EAAAa,OAAOC,QAAQ,uBAAqBX,QAAmBC,OACrDW,QAAMC,IAAKJ,E,MAIbZ,EAAAa,OAAOI,QAAQ,sBAAoBd,QAAiBC,MAAY,GAEjEA,EAAO,G,CAOd,MAAMc,EAAM,CACVC,KAAMC,SAASC,cAAe,QAC9BjB,MAAOgB,SAASC,cAAe,uBAC/BC,KAAMF,SAASC,cAAe,sBAC9BE,OAAQH,SAASC,cAAe,wBAChCG,UAAWJ,SAASC,cAAe,WAGrCN,QAAQC,IAAKE,EAAId,OACjBW,QAAQC,IAAKE,EAAII,MACjBP,QAAQC,IAAKE,EAAIK,QACjBR,QAAQC,IAAKE,EAAIM,WACjBT,QAAQC,IAAKE,EAAIC,MAEjBD,EAAIC,KAAKM,iBAAkB,UAI3B,WAEEC,MAAMC,iBAEN,IAAIC,EAAYC,OAAQX,EAAId,MAAM0B,OAClC,MAAMC,EAAWF,OAAQX,EAAII,KAAKQ,OAC5BE,EAAmBH,OAAQX,EAAIK,OAAOO,OAE5C,IAAM,IAAIG,EAAI,EAAGA,GAAKD,EAAkBC,GAAK,EAE3CL,GAAaG,EACb7B,EAAe+B,EAAGL,GAGpBF,MAAMQ,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nfunction createPromise( position, delay )\n{\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise( ( resolve, reject ) => \n  {\n    setTimeout( () => \n    {\n      if ( shouldResolve ) \n      {\n        const promisObj = {\n          position,\n          delay\n        };\n        Notify.success(`✅ Fulfilled promise ${ position } in ${ delay }ms`);\n        console.log( promisObj );\n      }\n      else\n      {\n        Notify.failure(`❌ Rejected promise ${ position } in ${ delay }ms`);\n      }\n    }, delay );\n  });\n}\n\n\n\n\nconst ref = {\n  form: document.querySelector( 'form' ),\n  delay: document.querySelector( 'input[name=\"delay\"]' ),\n  step: document.querySelector( 'input[name=\"step\"]' ),\n  amount: document.querySelector( 'input[name=\"amount\"]' ),\n  createBtn: document.querySelector( 'button' ),\n}\n\nconsole.log( ref.delay );\nconsole.log( ref.step );\nconsole.log( ref.amount );\nconsole.log( ref.createBtn );\nconsole.log( ref.form );\n\nref.form.addEventListener( 'submit', submitHandler );\n\n\n\nfunction submitHandler()\n{\n  event.preventDefault();\n\n  let delayTime = Number( ref.delay.value );\n  const stepTime = Number( ref.step.value );\n  const amountOfPromises = Number( ref.amount.value );\n      \n  for ( let i = 1; i <= amountOfPromises; i += 1 )\n  {\n    delayTime += stepTime;\n    createPromise( i, delayTime );\n  }\n  \n  event.currentTarget.reset();\n}\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","promisObj","Notify","success","console","log","failure","$47d4ff9957288465$var$ref","form","document","querySelector","step","amount","createBtn","addEventListener","event","preventDefault","delayTime","Number","value","stepTime","amountOfPromises","i","currentTarget","reset"],"version":3,"file":"03-promises.b6f9d767.js.map"}